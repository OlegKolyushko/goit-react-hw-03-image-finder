{"version":3,"sources":["Components/Modal/Modal.module.css","Components/Loader/Loader.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Searchbar/Searchbar.module.css","Components/services/imageApi.js","Components/Loader/Loader.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/App/App.js","index.js","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Button/Button.module.css"],"names":["module","exports","searchQuery","page","axios","get","then","response","data","hits","Loader","type","color","height","width","timeout","className","styles","Spinner","Component","Searchbar","state","inputValue","handlerInput","e","setState","target","value","handlerSubmit","preventDefault","props","onSubmit","SearchForm","this","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","ImageGalleryItem","image","onOpen","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","id","key","webformatURL","largeImageURL","Button","ButtonWrap","Modal","heandlerCloseModal","code","onClose","window","addEventListener","removeEventListener","Overlay","children","App","loading","largeImgURL","error","modal","largeImageLoading","fetchImages","imageApi","prevState","catch","finally","handlerSearchFormSubmit","query","handlerModalOpen","imgURL","handlerModalClose","handlerLoadImg","loaded","prevProps","length","scrollTo","top","document","documentElement","scrollHeight","behavior","message","ReactDom","render","querySelector"],"mappings":"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","file":"static/js/main.d5212b65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1FrrW\",\"Modal\":\"Modal_Modal__2JJJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__3-VJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2EFyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3EYDL\",\"SearchForm\":\"Searchbar_SearchForm__3nzZ5\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2v8DK\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1Qj1S\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1Qu7k\"};","import axios from 'axios';\r\n\r\nconst fetchImageWithQuery = (searchQuery, page = 1) => {\r\n    return axios\r\n    .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=18183853-b5401f44aa1398f977df87bc0&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default {fetchImageWithQuery};","import React, {Component} from 'react';\r\nimport Spinner from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from './Loader.module.css';\r\n\r\nexport default class Loader extends Component {\r\n    render() {\r\n      return (\r\n        <Spinner\r\n          type=\"Plane\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n          className={styles.Spinner}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  // export default function Loader({loading}) {\r\n  //   return (\r\n  //     <Spinner\r\n  //         type=\"Puff\"\r\n  //         color=\"#00BFFF\"\r\n  //         height={100}\r\n  //         width={100}\r\n  //         timeout={3000} //3 secs\r\n  //         className={styles.Spinner}\r\n  //         visible={loading}\r\n  //       />\r\n  //   )\r\n  // }","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }\r\n  state = {\r\n      inputValue: '',\r\n  };\r\n  handlerInput = (e) => {\r\n      this.setState({inputValue: e.target.value});\r\n  };\r\n  handlerSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.onSubmit(this.state.inputValue);\r\n      this.setState({inputValue: ''});\r\n  }\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handlerSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handlerInput}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\n\r\n function ImageGalleryItem({ image, onOpen }) {\r\n  return (\r\n    <li className={styles.ImageGalleryItem} onClick={onOpen}>\r\n      <img src={image} alt=\"\" className={styles.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n}\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ImageGallery.module.css\";\r\n\r\n function ImageGallery({ images, onOpen }) {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {images.map((image, id) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          image={image.webformatURL}\r\n          onOpen={() => onOpen(image.largeImageURL)}\r\n        ></ImageGalleryItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(Object).isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGallery;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Button.module.css\";\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <div className={styles.ButtonWrap} >\r\n      <button type=\"button\" className={styles.Button} onClick={onClick}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\n\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        onClose: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.heandlerCloseModal)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.heandlerCloseModal)\r\n\r\n    }\r\n    heandlerCloseModal = (e) => {\r\n        if(e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={styles.Overlay} onClick={this.props.onClose}>\r\n              <div className={styles.Modal} onClick={this.props.onClose}>\r\n                {/* <img src={this.props.image} alt=\"\" /> */}\r\n                {this.props.children}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport imageApi from \"../services/imageApi\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    largeImgURL: null,\r\n    error: null,\r\n    searchQuery: \"\",\r\n    page: 1,\r\n    modal: false,\r\n    largeImageLoading: null,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchImages();\r\n    }\r\n    if(this.state.images.length > 12) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n    \r\n  }\r\n  fetchImages = () => {\r\n    this.setState({ loading: true });\r\n    const { searchQuery, page } = this.state;\r\n    imageApi\r\n      .fetchImageWithQuery(searchQuery, page)\r\n      .then((images) =>\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...images],\r\n          page: prevState.page + 1,\r\n        }))\r\n      )\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n  handlerSearchFormSubmit = (query) => {\r\n    this.setState({ searchQuery: query, page: 1, images: [] });\r\n  };\r\n \r\n  handlerModalOpen = imgURL => {\r\n    this.setState({ modal: true });\r\n    this.setState({ largeImgURL: imgURL});    \r\n  };\r\n  handlerModalClose = (e) => {\r\n    this.setState({ modal: false });\r\n    this.setState({ largeImgURL: null});\r\n\r\n  };\r\n  handlerLoadImg = (e) => {\r\n    this.setState({loaded: true});\r\n  }\r\n\r\n  render() {\r\n    const { images, loading, error, modal, largeImgURL, loaded } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handlerSearchFormSubmit}></Searchbar>\r\n        {error && <p>Oooops, something went wrong: {error.message}</p>}\r\n        {images.length > 0 && (\r\n          <ImageGallery\r\n            images={images}\r\n            onOpen={this.handlerModalOpen}\r\n          ></ImageGallery>\r\n        )}\r\n        {loading && <Loader />}\r\n        {modal && (\r\n          <Modal\r\n            onClose={this.handlerModalClose}\r\n          >\r\n                   {/* { this.state.loaded ? <Loader/> :} */}\r\n             {/* <img src={largeImgURL} alt=\"\" onLoad={() => this.setState({loaded: true})} /> */}\r\n             {/* {loaded ? <img src={largeImgURL} alt=\"\" load={() => this.setState({loaded: true})}/> : <Loader/> } */}\r\n             <img src={largeImgURL} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n        {images.length > 0 && !loading && (\r\n          <Button\r\n            onClick={this.fetchImages}\r\n          ></Button>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// && this.state.page !== this.state.totalPage\r\n// document.documentElement.scrollHeight &&\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './Components/App/App'\n\n\n\nReactDom.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3PzGu\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3--RA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2t7NM\",\"ButtonWrap\":\"Button_ButtonWrap__Q1eUz\"};"],"sourceRoot":""}